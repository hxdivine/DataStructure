图

有向图和无向图
/********************************************************************************/

图的深度优先搜索 DFS

1. 深度优先遍历，从初始访问结点出发，初始访问结点可能会有多个邻接结点，深度优先遍历的策略就是首先访问第一个邻接结点，然后再以这个被访问的邻接结点作为初始结点，访问它的第一个邻接结点，可以这样理解：每次都在访问完当前结点后首先访问结点的第一个邻接结点

2. 我们可以看到，这样访问策略是优先往纵向挖掘深入，而不是对一个结点的所有邻接结点进行横向访问

3. 显然，深度优先搜索是一个递归的过程
/********************************************************************************/
图的深度优先搜索算法

1. 访问初始结点v，并标记结点v为已访问

2. 查找结点v的第一个邻接结点w

3. 若w存在，则继续执行4，如果w不存在，则回到第1步，将从v的下一个结点继续

4. 若w未被访问，对w进行深度优先遍历递归

5. 查找结点v的w邻接结点的下一个邻接结点跳到步骤3
/********************************************************************************/

图的广度优先遍历基本思想 BFS
类似于一个分层搜索的过程，广度优先遍历需要使用一个队列以保持访问过的结点的顺序，以便按这个顺序来访问这些结点的邻接结点

/********************************************************************************/
图的广度优先遍历

1. 访问初始结点v并标记结点v为已访问

2. 结点v入队列

3. 当队列非空时，继续执行，否则算法结束

4. 出队列，取得队头结点u

5. 查找结点u的第一个邻接结点w

6. 若结点u的邻接结点w不存在，则转到步骤3，否则循环执行以下三个步骤
	
	6.1 若结点w尚未被访问，则访问结点w并标记为已访问

	6.2 结点w入队列

	6.3 查找结点u的继w邻接结点后的下一个邻接结点w，转到步骤6

/********************************************************************************/