动态规划算法

/**********************************************************************************/
动态规划算法介绍

1. 动态规划算法的核心思想是：将大问题划分为小问题进行解决，从而一步步获取
最优解的处理算法

2. 动态规划算法与分治算法类似，其基本思想也是将待求解问题分解成若干个子问题，
先求解子问题，然后从这些子问题的解得到原问题的解

3. 与分支法不同的是，适合于用动态规划求解的问题，经分解后得到子问题往往不是
相互独立的（即下一个子阶段的求解是建立再上一个子阶段的解的基础上）

4. 动态规划可以通过填表的方式来2逐步推进，得到最优解
/**********************************************************************************/
应用场景 -- 背包问题

算法的主要思想，利用动态规划来解决，每次遍历到的第i个物品，根据w[i]和v[i]来确定是否需要将该物品放入背包中，即对于给定的n个物品，设v[i],w[i]分别为第i个物品的价值和重量，c为背包容量，再令v[i][j]表示前i个物品中能够装入容量为背包中的最大价值，则我们有以下结果

1. v[i][0] = v[0][j] = 0; //表示填入表第一行和第一列是0

2. 当w[i] > j时，v[i][j] = v[i - 1][j] //当准备加入新增的商品的容量大于当前背包的容量
时，就直接使用上一个单元格的装入策略

3. 当j >= w[i]时，v[i][j] = max(v[i - 1][j],v[i - 1][j - w[i]] + v[i])
//当准备加入的新增的商品的容量小于等于当前背包的容量，
//装入方式：
v[i-1][j]：就是上一个单元格的装入的最大值
v[i]：表示当前商品的价值
v[i-1][j-w[i]]:装入i-1商品，到剩余空间j-w[i]的最大价值

/**********************************************************************************/