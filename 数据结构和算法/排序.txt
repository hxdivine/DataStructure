排序

/*********************************************************************/
排序的分类：
内部排序
（直接插入排序，希尔排序，冒泡排序，快速排序，菜单选择排序，堆排序）
指将需要处理的所有数据都加载到内部存储器中进行排序

外部排序法
数据量过大，无法全部加载到内存中，需要借助外部存储进行排序

/*********************************************************************/
时间频度：一个算法花费的时间和它执行的语句数量相关，所执行的语句次数即为T(n)

/*********************************************************************/
时间复杂度：
一般情况下，算法中的基本操作语句的重复执行次数是问题规模n的某个函数，有T(n)，若有某个辅助函数f(n)，使得当n趋近于无穷大时，T(n）/f(n)的极限值为不等于0的常数，则称f(n)为T(n)的同数量级函数，记作T(n)=O(f(n))，称O(f(n))为算法的渐进时间复杂度，简称时间复杂度

T（n）不同，当时间复杂度可能相同，如T(n)=n^2 + 7n +6 与T(n)=3n^2 + 2n + 2它们的T(n)不同，但时间复杂度相同，都为O(n^2)

计算时间复杂度的方法

1. 用常熟1代替运行时间中所有加法常数 如T(n)=n^2 + 7n +6  =>T(n)=n^2 + 7n +1

2. 修改后的运行次数函数中，只保留最高阶项 如T(n)=n^2 + 7n +1  =>T(n)=n^2 

3.去除最高阶项的系数  T(n)=n^2 =>O(n^2)

/*********************************************************************/
常见的复杂度(由小到大)

1. 常数阶O(1)
2. 对数阶O(log2 n)
3. 线性阶O(n)
4. 线性对数阶O(nlog2 n)
5. 平方阶O(n^2)
6. 立方阶O(n^3)
7. k次方阶O(n^k)
8. 指数阶O(2^n)
