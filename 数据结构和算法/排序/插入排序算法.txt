插入排序算法   Insertion Sorting

/********************************************************************************/
基本思想：
把n个待排序的元素看成为一个有序表和一个无序表，开始时有序表中只包含一个元素，无序表中包含n-1个元素，排序过程中每次从无序表中取出第一个元素，把他的排序码依次与有序表的排序码进行比较，将它插入到有序表中的适当位置

初始状态   17  3  21  14  20
第一次      【3  17】  21  14  20
第二次      【3  17     21】  14  20
第三次      【3  14    17    21】  20
第四次      【3  14    17    20  21】

[17, 20, 3, 44, 16, 8, 5, 30]
[3, 17, 20, 44, 16, 8, 5, 30]
[3, 17, 20, 44, 16, 8, 5, 30]
[3, 16, 17, 20, 44, 8, 5, 30]
[3, 8, 16, 17, 20, 44, 5, 30]
[3, 5, 8, 16, 17, 20, 44, 30]
[3, 5, 8, 16, 17, 20, 30, 44]
/********************************************************************************/

插入排序的时间复杂度为 O（n）

/********************************************************************************/
算法：
int insertVal = 0;
int insertIndex = 0;
for(int i = 1; i < arr.length; i++) {
	insertVal = arr[i];
	insertIndex = i - 1;
	while(insertIndex >= 0 && insertVal < arr[insertIndex]) {
		arr[insertIndex+1] = arr[insertIndex];
		insertIndex--;
	}
	arr[insertIndex+1] = insertVal;
	System.out.println(Arrays.toString(arr));
}

/********************************************************************************/